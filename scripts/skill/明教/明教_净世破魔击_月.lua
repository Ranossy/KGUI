---------------------------------------------------------------------->
-- 脚本名称:	scripts/skill/明教/明教_净世破魔击_月.lua
-- 更新时间:	2017/4/7 11:07:52
-- 更新用户:	XIAXIANBO1
-- 脚本说明:
----------------------------------------------------------------------<
------------------------------------------------
-- 创建人   :  郑海星
-- 创建时间	:  20120621
-- 效果备注	:  明教技能
------------------------------------------------

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")

tSkillData =
{
	{nLunarDamage = 42 * 2 * 0.98, nLunarDamageRand = 42 * 2 * 0.04, nCostMana = 30 },
	{nLunarDamage = 77 * 2 * 0.98, nLunarDamageRand = 77 * 2 * 0.04, nCostMana = 50 },
	{nLunarDamage = 100 * 2 * 0.98, nLunarDamageRand = 100 * 2 * 0.04, nCostMana = 67 },
	{nLunarDamage = 123 * 2 * 0.98, nLunarDamageRand = 123 * 2 * 0.04, nCostMana = 93 },
	{nLunarDamage = 146 * 2 * 0.98, nLunarDamageRand = 146 * 2 * 0.04, nCostMana = 111},
	{nLunarDamage = 169 * 2 * 0.98, nLunarDamageRand = 169 * 2 * 0.04, nCostMana = 130},
	{nLunarDamage = 192 * 2 * 0.98, nLunarDamageRand = 192 * 2 * 0.04, nCostMana = 149},
	{nLunarDamage = 215 * 2 * 0.98, nLunarDamageRand = 215 * 2 * 0.04, nCostMana = 167},
	{nLunarDamage = 238 * 2 * 0.98, nLunarDamageRand = 238 * 2 * 0.04, nCostMana = 186},
	{nLunarDamage = 262 * 2 * 0.98, nLunarDamageRand = 262 * 2 * 0.04, nCostMana = 186},
};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

	local bRetCode = false;
	local dwSkillLevel = skill.dwLevel

	--skill.AddAttribute(
	--ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_NOT_ROLLBACK,
	--ATTRIBUTE_TYPE.EXECUTE_SCRIPT,
	--"skill/明教/明教_净世破魔击_月.lua",
	--0
	--);
	--副本组的冲刺技能标记buff需求
	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.CALL_BUFF,
		7795,
		1
	);

	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.CALL_BUFF,
		4528,
		1
	);

	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.DASH,
		90,
		0
	);
	--添加冲锋换动作buff

	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.CAST_SKILL_TARGET_DST,
		4476,
		dwSkillLevel
	);

	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.EXECUTE_SCRIPT,
		"skill/明教/90级奇穴/满月AOE.lua",
		0
	);
	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.EXECUTE_SCRIPT,
		"skill/明教/90级奇穴/满月冲刺.lua",
		0
	);
	--skill.AddAttribute(
	--ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_NOT_ROLLBACK,
	--ATTRIBUTE_TYPE.CAST_SKILL,
	--4476,
	--dwSkillLevel
	--);

	--延迟打2次
	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.CALL_BUFF,
		4634,
		1
	);
	----------------- 技能施放Buff需求 ---------------------------------------------
	--skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, BUFF_COMPARE_FLAG.GREATER_EQUAL, nLevel, BUFF_COMPARE_FLAG.GREATER_EQUAL);		-- 需求自身Buff
	--skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, BUFF_COMPARE_FLAG.GREATER_EQUAL, nLevel, BUFF_COMPARE_FLAG.GREATER_EQUAL);		-- 需求目标Buff
	--skill.AddSlowCheckSelfOwnBuff(dwBuffID, nStackNum, BUFF_COMPARE_FLAG.GREATER_EQUAL, nLevel, BUFF_COMPARE_FLAG.GREATER_EQUAL);	-- 需求自身属于自己的Buff
	--skill.AddSlowCheckDestOwnBuff(dwBuffID, nStackNum, BUFF_COMPARE_FLAG.GREATER_EQUAL, nLevel, BUFF_COMPARE_FLAG.GREATER_EQUAL);	-- 需求目标属于自己的Buff

	-----------------技能施放技能需求-------------------------------------------
	--skill.AddCheckSelfLearntSkill(dwSkillID, dwSkillLevel, LevelCompareFlag);     --检查比较Caster自己已学习的技能ID和等级
	----------------- BUFF相关 -------------------------------------------------
	--skill.BindBuff(1, nBuffID, nBuffLevel);		-- 设置1号位Buff
	--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
	--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
	--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff

	----------------- 设置Cool down --------------------------------------------
	-- 公共CD
	--skill.SetPublicCoolDown(16);							-- 公共CD 1.5秒
	-- 技能CD, CoolDownIndex为CD位(共3个), nCoolDownID为CoolDownList.tab内的CDID
	--skill.SetNormalCoolDown(CoolDownIndex, nCoolDownID);	--技能普通CD
	--skill.SetCheckCoolDown(CoolDownIndex, nCoolDownID);	--只检查不走的CD
	----------------- 经验升级相关 ---------------------------------------------
	--注意,虽然这些内容可以在脚本内更改,但一般不做任何改动!
	--skill.dwLevelUpExp	= 0;    				-- 升级经验
	--skill.nExpAddOdds		= 1024;					-- 技能熟练度增长概率
	--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
	--skill.nBaseThreat		= 0;

	----------------- 技能消耗 -------------------------------------------------
	--skill.nCostLife		= 0;									-- 技能消耗生命值
	--skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
	--skill.nCostStamina	= 0;									-- 技能消耗的体力
	--skill.nCostItemType	= 0;									-- 技能消耗的物品类型
	--skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID

	----------------- 聚气相关 -------------------------------------------------
	--skill.bIsAccumulate	= false;				-- 技能是否需要聚气
	--skill.SetSubsectionSkill(nBeginInterval, nEndInterval, dwSkillID, dwSkillLevel)

	----------------- 链状技能相关 ---------------------------------------------
	--skill.nChainBranch	= 1;					--链状技能分支数
	--skill.nChainDepth		= 3;					--链状技能层数
	--链状技能的子技能用skill.SetSubsectionSkill()设定

	----------------- 施放距离 -------------------------------------------------
	skill.nMinRadius = 0 * LENGTH_BASE;		-- 技能施放的最小距离
	skill.nMaxRadius = 10 * LENGTH_BASE;		-- 技能施放的最大距离

	----------------- 作用范围 -------------------------------------------------
	--skill.nProtectRadius = 0 * LENGTH_BASE;                     -- 环形和矩形AOE的保护距离，范围内不受伤害
	--skill.nHeight = 0 * LENGTH_BASE;                            -- AOE的高度，全高，圆柱体AOE中不填为2倍的nAreaRadius，矩形AOE中不填为nAreaRadius
	--skill.nRectWidth = 0 * LENGTH_BASE;                         -- 矩形AOE的宽度，全宽，不填为nAreaRadius
	skill.nAngleRange = 256;					-- 攻击范围的扇形角度范围
	--skill.nAreaRadius		= 0 * LENGTH_BASE;		-- 技能作用半径
	--skill.nTargetCountLimit	= 2;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制)

	----------------- 时间相关 -------------------------------------------------
	--skill.nPrepareFrames  	= 0;				-- 吟唱帧数
	--skill.nChannelInterval	= 50; 				-- 通道技间隔时间
	--skill.nChannelFrame		= 0;	 			-- 通道技持续时间，单位帧数
	--skill.nBulletVelocity		= 0;				-- 子弹速度，单位 点/帧

	----------------- 阵法相关 -------------------------------------------------
	--skill.bIsFormationSkill	= false;			-- 是否阵眼技能
	--skill.nFormationRange		= 0 * LENGTH_BASE;	-- 结阵的范围
	--skill.nLeastFormationPopulation	= 2;		-- 结阵的范围的最少队员数（包括队长）

	----------------- 目标血量需求 ---------------------------------------------
	--skill.nTargetLifePercentMin	= 0;			-- 血量最小值>=
	--skill.nTargetLifePercentMax	= 100;			-- 血量最大值<=

	----------------- 自身血量需求 ---------------------------------------------
	--skill.nSelfLifePercentMin	= 0;				-- 血量最小值>=
	--skill.nSelfLifePercentMax	= 100;				-- 血量最大值<=

	----------------- 打退打断落马相关 -------------------------------------------------
	--skill.nBeatBackRate       = 1 * PERCENT_BASE;		-- 技能被打退的概率,默认1024
	--skill.nBrokenRate         = 1 * PERCENT_BASE;		-- 技能被打断的概率,默认1024
	--skill.nBreakRate			= 0 * PERCENT_BASE;		-- 打断目标施法的概率,基数1024

	--skill.nDismountingRate	= 0;					-- 将目标击落下马几率,基数1024，默认0

	----------------- 武器伤害相关 ---------------------------------------------
	--skill.nWeaponDamagePercent		= 0;			-- 武器伤害百分比,对外功伤害有用。填0表示此次外功攻击不计算武器伤害,1024为100%

	return true;
end

-- 对技能执行的特殊条件检查，该函数可以在开始施放技能的时候被调用，以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意，最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态，以判断是否可以发出技能
	return nPreResult;
end

-- 技能升级时调用此函数，参数skill为升级后的skill，第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)

end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID)
	local cPlayer = GetPlayer(dwCharacterID)
	if not cPlayer then
		return
	end
	local cNpc = cPlayer.GetSelectCharacter()
	if not cNpc then
		return
	end
	local distance = GetCharacterDistance(cPlayer.dwID, cNpc.dwID)
	if distance > 256 then
		local scene = cPlayer.GetScene()
		if not scene then
			return
		end
		local PI = 3.1416;
		local nAngel = PI / 2;
		local nR = 250;
		local nDir = cNpc.nFaceDirection;
		local dwAngel = (cNpc.nFaceDirection * 1.4 - 90) / 180 * PI + nAngel;
		local nCX = (cPlayer.nX + cNpc.nX) * 0.5
		local nCY = (cPlayer.nY + cNpc.nY) * 0.5
		local nCZ = (cPlayer.nZ + cNpc.nZ) * 0.5
		--local nResaultA = cPlayer.CastSkillXYZ(4062,1,nCX,nCY,cNpc.nZ)	--测试目标背后是否可达
		--local nResaultB = cPlayer.CastSkill(3625, 1, TARGET.NPC, cNpc.dwID)	--测试目标位置是否可达
		--if nResaultB ~= 1 then			--释放失败后补偿
		--cPlayer.ClearCDTime(503)
		--cPlayer.ClearCDTime(519)
		--cPlayer.SendSystemMessage("无法施展招式")
		--return
		--end
		--if nResaultA == 1  then		--若3D障碍可达，则传至目标前面
		cPlayer.Stop()
		cPlayer.SetPosition(nCX, nCY, nCZ)
	end
	--[[
	if player.GetSkillLevel(17567) == 1 then
		player.AddBuff(player.dwID, player.nLevel, 11866, 1,2)
	end
	--]]
	--cPlayer.TurnTo(cNpc.nFaceDirection)
	--cPlayer.SetTimer()
	--cPlayer.SetTimer(1, "scripts/skill/明教/明教_流光囚影.lua", 0, 0)
	--else						--若3D障碍不可达，则传至目标位置
	--cPlayer.Stop()
	--cPlayer.SetPosition(cNpc.nX, cNpc.nY, cNpc.nZ)
	--cPlayer.TurnTo(cNpc.nFaceDirection)
	--cPlayer.SetTimer(3, "scripts/skill/明教/明教_流光囚影.lua", 0, 0)
	--cPlayer.AddBuff(0,99,4322,1,1)	 			--延迟切镜头
	--RemoteCallToClient(dwCharacterID, "OnSetViewRespond", 0)
	--end
	--cPlayer.AddBuff(0, 99, 4322, 1, 2)	 			--延迟切镜头
	--cPlayer.CastSkill(4069,1)		--走CD
end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end

 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com