---------------------------------------------------------------------->
-- 脚本名称:	scripts/skill/Quest/安史之乱_奇宝之争_天选者.lua
-- 更新时间:	2013/10/22 20:26:40
-- 更新用户:	LILIN1-PC
-- 脚本说明:	
----------------------------------------------------------------------<
------------------------------------------------
-- 创建人   :  王洋	
-- 创建时间	:  2007-12-11
-- 效果备注	:  默认的技能脚本
------------------------------------------------

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")
Include("scripts/Map/野外首领/奇宝之争/include/奇宝之争_Data.lh")

tSkillData = 
{
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 1
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 2
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 3
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 4
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 5
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 6
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 7
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 8
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 9
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 10
};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

	local dwSkillLevel = skill.dwLevel;
    	
	----------------- 魔法属性 -------------------------------------------------
	--[[
   	skill.AddAttribute(
   		ATTRIBUTE_EFFECT_MODE.nAttributeEffectMode,					-- 属性作用模式
   		ATTRIBUTE_TYPE.nAttributeKey,								-- 魔法属性
   		nAttributeValue1,											-- 属性值1
   		nAttributeValue2											-- 属性值2
   		);
    --]]
    
	----------------- 技能施放Buff需求 ---------------------------------------------
	--skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求自身Buff
	--skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求目标Buff
	--skill.AddSlowCheckSelfOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求自身属于自己的Buff
	--skill.AddSlowCheckDestOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求目标属于自己的Buff   

	-----------------技能施放技能需求-------------------------------------------
	--skill.AddCheckSelfLearntSkill(dwSkillID, dwSkillLevel, LevelCompareFlag);     --检查比较Caster自己已学习的技能ID和等级
	
	-----------------技能渐变相关-------------------------------------------
	--skill.nAttackAttenuationCof = 0;     --技能伤害渐变百分比，1024为100%，正数为增加，负数为减少。注意此参数只能在渐变类型的AOE中使用！
	--skill.SetSubSkillForAreaDepth(1,dwSkillID,dwSkillLevel);  --对第一个搜索到的目标施放子技能。注意此参数只能在渐变类型的AOE中使用！
	--skill.SetSubSkillForAreaDepth(2,dwSkillID,dwSkillLevel);  --对第二个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(3,dwSkillID,dwSkillLevel);  --对第三个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(4,dwSkillID,dwSkillLevel);  --对第四个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(5,dwSkillID,dwSkillLevel);  --对第五个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(6,dwSkillID,dwSkillLevel);  --对第六个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(7,dwSkillID,dwSkillLevel);  --对第七个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(8,dwSkillID,dwSkillLevel);  --对第八个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(9,dwSkillID,dwSkillLevel);  --对第九个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(10,dwSkillID,dwSkillLevel);  --对第十个搜索到的目标施放子技能。
	
	----------------- BUFF相关 -------------------------------------------------
	--skill.BindBuff(1, nBuffID, nBuffLevel);		-- 设置1号位Buff
	--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
	--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
	--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff

	----------------- 设置Cool down --------------------------------------------
	-- 公共CD
	--skill.SetPublicCoolDown(16);							-- 公共CD 1.5秒
	-- 技能CD, CoolDownIndex为CD位(共3个), nCoolDownID为CoolDownList.tab内的CDID
	--skill.SetNormalCoolDown(CoolDownIndex, nCoolDownID);	--技能普通CD
	--skill.SetCheckCoolDown(CoolDownIndex, nCoolDownID);	--只检查不走的CD
	----------------- 经验升级相关 ---------------------------------------------
	--注意,虽然这些内容可以在脚本内更改,但一般不做任何改动!
	--skill.dwLevelUpExp	= 0;    				-- 升级经验
	--skill.nExpAddOdds		= 1024;					-- 技能熟练度增长概率
	--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
	--skill.nBaseThreat		= 0;
	
	----------------- 技能是否可在吟唱中施放 -------------------------------------------------
	--skill.bIgnorePrepareState = true	--技能是否可在吟唱中施放，吟唱、通道、蓄力技不能填true
	
	----------------- 技能消耗 -------------------------------------------------
	--skill.nCostLife		= 0;									-- 技能消耗生命值
	--skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
	--skill.nCostStamina	= 0;									-- 技能消耗的体力
	--skill.nCostItemType	= 0;									-- 技能消耗的物品类型
	--skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID
    
	----------------- 聚气相关 -------------------------------------------------
	--skill.bIsAccumulate	= false;				-- 技能是否需要聚气
	--skill.nNeedAccumulateCount = 0;				-- 技能需要气点的个数，当skill.bIsAccumulate	= true时生效
	--skill.SetSubsectionSkill(nBeginInterval, nEndInterval, dwSkillID, dwSkillLevel)
    
	----------------- 链状技能相关 ---------------------------------------------
	--skill.nChainBranch	= 1;					--链状技能分支数
	--skill.nChainDepth		= 3;					--链状技能层数
	--链状技能的子技能用skill.SetSubsectionSkill()设定
    
	----------------- 施放距离 -------------------------------------------------
	--skill.nMinRadius		= 0 * LENGTH_BASE;		-- 技能施放的最小距离 
	--skill.nMaxRadius		= 0 * LENGTH_BASE;		-- 技能施放的最大距离 

	----------------- 作用范围 -------------------------------------------------
	--skill.nProtectRadius = 0 * LENGTH_BASE;                     -- 环形和矩形AOE的保护距离，范围内不受伤害
	--skill.nHeight = 0 * LENGTH_BASE;                            -- AOE的高度，全高，圆柱体AOE中不填为2倍的nAreaRadius，矩形AOE中不填为nAreaRadius
	--skill.nRectWidth = 0 * LENGTH_BASE;                         -- 矩形AOE的宽度，全宽，不填为nAreaRadius
	--skill.nAngleRange		= 256;					-- 攻击范围的扇形角度范围
	--skill.nAreaRadius		= 0 * LENGTH_BASE;		-- 技能作用半径 
	--skill.nTargetCountLimit	= 2;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制) 
    
	----------------- 时间相关 -------------------------------------------------
	--skill.nPrepareFrames  	= 0;				-- 吟唱帧数
	--skill.nMinPrepareFrames  	= -1;				-- 急速效果最小吟唱帧数：默认是-1，吟唱不受急速影响。大于等于0则受急速影响，最小读条时间为填的值
	--skill.nChannelInterval	= 0; 				-- 通道技间隔时间
	--skill.nMinChannelInterval	= -1; 				-- 急速效果最小通道技间隔时间：默认是-1，通道不受急速影响。大于等于0则受急速影响，最通道间隔时间为填的值
	--skill.nChannelFrame		= 0;	 			-- 通道技持续时间，单位帧数
	--skill.nMinChannelFrame	= -1; 				-- 通常配合急速最小间隔时间使用。使得通道技能整体加速。如果这个填-1，间隔不是-1，高急速可以多1跳
	--skill.nBulletVelocity		= 0;				-- 子弹速度，单位 点/帧
    
	----------------- 阵法相关 -------------------------------------------------
	--skill.bIsFormationSkill	= false;			-- 是否阵眼技能
	--skill.nFormationRange		= 0 * LENGTH_BASE;	-- 结阵的范围
	--skill.nLeastFormationPopulation	= 2;		-- 结阵的范围的最少队员数（包括队长）
    
	----------------- 目标血量需求 ---------------------------------------------
	--skill.nTargetLifePercentMin	= 0;			-- 血量最小值>=
	--skill.nTargetLifePercentMax	= 100;			-- 血量最大值<=
    
	----------------- 自身血量需求 ---------------------------------------------
	--skill.nSelfLifePercentMin	= 0;				-- 血量最小值>=
	--skill.nSelfLifePercentMax	= 100;				-- 血量最大值<=
    
	----------------- 打退打断落马相关 -------------------------------------------------
	--skill.nBeatBackRate       = 1 * PERCENT_BASE;		-- 技能被打退的概率,默认1024
	--skill.nBrokenRate         = 1 * PERCENT_BASE;		-- 技能被打断的概率,默认1024
	--skill.nBreakRate			= 0 * PERCENT_BASE;		-- 打断目标施法的概率,基数1024
	
	--skill.nDismountingRate	= 0;					-- 将目标击落下马几率,基数1024，默认0
	
	----------------- 武器伤害相关 ---------------------------------------------
	skill.nWeaponDamagePercent = 0;			-- 武器伤害百分比,对外功伤害有用。填0表示此次外功攻击不计算武器伤害,1024为100%
	
	return true;
end

-- 对技能执行的特殊条件检查，该函数可以在开始施放技能的时候被调用，以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意，最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态，以判断是否可以发出技能
	return nPreResult;
end

-- 技能升级时调用此函数，参数skill为升级后的skill，第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)
	
end

--技能遗忘时执行的函数,参数skill为遗忘的skill
function OnSkillForgotten(skill, player)

end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID)
end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end
--2017.1.12接引人替换--
--[[
local tDelNPC = {--
	[6] = {
		{0, 0, 0, 0, 0, "WBJYR_yz", true},
	},
	[108] = {
		{0, 0, 0, 0, 0, "WBJYR_cd", true},
	},
	[194] = {
		{0, 0, 0, 0, 0, "WBJYR_ty", true},
	},
}
--]]	
function OnRemove(dwCharacterID, dwBuffID, nBuffLevel, nLeftFrame)
	
	local player = GetPlayer(dwCharacterID)
	if not player then
		return
	end
	
	if player.GetBuff(8207, 1) then
		player.DelBuff(8207, 1)
	end
	
	player.SetDynamicSkillGroup(0)
	
	local scene = player.GetScene()
	if not scene then
		return
	end
	
	scene.UnbindMapMarkByPlayer(dwCharacterID)
	
	if player.GetBuff(Wild_Treasure.BuffList.Defend.dwBuffID, Wild_Treasure.BuffList.Defend.nBuffLevel) then
		player.DelBuff(Wild_Treasure.BuffList.Defend.dwBuffID, Wild_Treasure.BuffList.Defend.nBuffLevel)
	end
	if player.GetBuff(Wild_Treasure.BuffList.TopHead.dwBuffID, Wild_Treasure.BuffList.TopHead.nBuffLevel) then
		player.DelBuff(Wild_Treasure.BuffList.TopHead.dwBuffID, Wild_Treasure.BuffList.TopHead.nBuffLevel)
	end
	if player.GetBuff(Wild_Treasure.BuffList.PercentCure.dwBuffID, Wild_Treasure.BuffList.PercentCure.nBuffLevel) then
		player.DelBuff(Wild_Treasure.BuffList.PercentCure.dwBuffID, Wild_Treasure.BuffList.PercentCure.nBuffLevel)
	end
	
	local npc_Control = Wild_Treasure.GetNpcControl(scene)
	if not npc_Control then
		WildTreasureErrorOption(player)
		player.SendSystemMessage(GetEditorString(6, 1052))
		RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_WARNING_RED", GetEditorString(6, 1053), 4)
		return
	end
	
	local dwOwnerID = Wild_Treasure.GetOwnerPlayerID(npc_Control)
	if dwCharacterID ~= dwOwnerID then
		WildTreasureErrorOption(player)
		player.SendSystemMessage(GetEditorString(6, 1052))
		RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_WARNING_RED", GetEditorString(6, 1053), 4)
		return
	end
	
	local dwState = Wild_Treasure.GetActivityState(npc_Control)
	
	if nLeftFrame ~= 0 then
		if dwState ~= 1 then
			return
		end
		
		WildTreasureErrorOption(player)
		
		player.SendSystemMessage(GetEditorString(6, 787))
		RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_WARNING_RED", GetEditorString(6, 791), 4)
		
		Wild_Treasure.CreateLostBox(scene, player.nX, player.nY, player.nZ)
		
		return
	end
		
	-- 开宝箱标记buff
	local buff_Box = player.GetBuff(Wild_Treasure.BuffList.OpenBox.dwBuffID, Wild_Treasure.BuffList.OpenBox.nBuffLevel)
	if not buff_Box then
		player.AddBuff(0, 99, Wild_Treasure.BuffList.OpenBox.dwBuffID, Wild_Treasure.BuffList.OpenBox.nBuffLevel, 7 * 24 * 3600 / 2)
		buff_Box = player.GetBuff(Wild_Treasure.BuffList.OpenBox.dwBuffID, Wild_Treasure.BuffList.OpenBox.nBuffLevel)
	end
	
	buff_Box.nCustomValue = #Wild_Treasure.HoldTime
	
	local szString = string.format(GetEditorString(6, 994), player.szName, Wild_Treasure.HoldTime[#Wild_Treasure.HoldTime])
	
	npc_Control.SetCustomUnsigned1(Wild_Treasure.Control.ValueName.dwRewardLevel, #Wild_Treasure.HoldTime)
	npc_Control.SetCustomUnsigned1(Wild_Treasure.Control.ValueName.dwState, 2)
	npc_Control.FireAIEvent(Wild_Treasure.Control.AIEndEvent, 0, 0)
	
	UpdateStatData("OpenWildTreasure|" .. scene.dwMapID, 1)
	
	local szTongName = Wild_Treasure.GetOwnerTongName(npc_Control)
	szString = string.format(
		GetEditorString(6, 995),
		szTongName, player.szName, Wild_Treasure.HoldTime[#Wild_Treasure.HoldTime]
	)
	
	SendGlobalSysMsg(szString)
	SendGlobalSysMsg(szString, ANNOUNCE_SHOW_TYPE.SCROLL_BOX)
	
	player.PlaySfx(611, player.nX, player.nY, player.nZ)
	player.PlaySfx(613, player.nX, player.nY, player.nZ)
	player.PlaySfx(622, player.nX, player.nY, player.nZ)
	player.CastSkill(8487, 1)
	player.SendSystemMessage(GetEditorString(6, 996) .. Wild_Treasure.HoldTime[#Wild_Treasure.HoldTime] .. GetEditorString(6, 997))
	RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_ADVERT_GREEN", GetEditorString(6, 793), 4)
	--[[  --2017.1.12接引人替换
	------------回收世界首领期间挑战秘境临时接引NPC----------------
	if scene.dwMapID == 215 then
		--	RemoteCallToCenter("On_Activity_DelDungeonQueneNpc")
		RemoteCallToCenter("On_Activity_DeleteNPC",tDelNPC)
	end
	-----------------NPC回收结束---------------------------------
	--]]
end

function WildTreasureErrorOption(player)
	local nAmount = player.GetItemAmountInAllPackages(ITEM_TABLE_TYPE.OTHER, Wild_Treasure.BoxItemID)
	if nAmount > 0 then
		player.CostItemInAllPackage(ITEM_TABLE_TYPE.OTHER, Wild_Treasure.BoxItemID, nAmount)
	end
	
	if player.GetBuff(Wild_Treasure.BuffList.Protect.dwBuffID, Wild_Treasure.BuffList.Protect.nBuffLevel) then
		player.DelBuff(Wild_Treasure.BuffList.Protect.dwBuffID, Wild_Treasure.BuffList.Protect.nBuffLevel)
	end
	if player.GetBuff(Wild_Treasure.BuffList.OpenBox.dwBuffID, Wild_Treasure.BuffList.OpenBox.nBuffLevel) then
		player.DelBuff(Wild_Treasure.BuffList.OpenBox.dwBuffID, Wild_Treasure.BuffList.OpenBox.nBuffLevel)
	end
	if player.GetBuff(Wild_Treasure.BuffList.CheckStealth.dwBuffID, Wild_Treasure.BuffList.CheckStealth.nBuffLevel) then
		player.DelBuff(Wild_Treasure.BuffList.CheckStealth.dwBuffID, Wild_Treasure.BuffList.CheckStealth.nBuffLevel)
	end
end
 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com