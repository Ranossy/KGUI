---------------------------------------------------------------------->
-- 脚本名称:	scripts/skill/Quest/江湖百态/艺人_反馈座椅.lua
-- 更新时间:	2016/7/12 23:59:16
-- 更新用户:	wangwei2
-- 脚本说明:
----------------------------------------------------------------------<

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")

tSkillData =
{
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 1
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 2
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 3
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 4
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 5
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 6
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 7
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 8
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 9
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 10
};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

	local dwSkillLevel = skill.dwLevel;
	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK, -- 属性作用模式
		ATTRIBUTE_TYPE.EXECUTE_SCRIPT, -- 魔法属性
		"skill/Quest/江湖百态/艺人_反馈座椅.lua", -- 属性值1
		0														-- 属性值2
	)
	----------------- 技能施放Buff需求 ---------------------------------------------
	--skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求自身Buff
	--skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求目标Buff
	--skill.AddSlowCheckSelfOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求自身属于自己的Buff
	--skill.AddSlowCheckDestOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求目标属于自己的Buff

	-----------------技能施放技能需求-------------------------------------------
	--skill.AddCheckSelfLearntSkill(dwSkillID, dwSkillLevel, LevelCompareFlag);     --检查比较Caster自己已学习的技能ID和等级

	-----------------技能施放姿态需求(苍云)----------------------------------------
	--skill.nNeedPoseState = 1    --检查姿态，1为擎刀姿态，2为擎盾姿态

	----------------技能伤害给小队回血------------------------------------------

	--skill.nDamageToLifeForParty = 0	--技能伤害给小队成员百分比回血

	-----------------技能渐变相关-------------------------------------------
	--skill.nAttackAttenuationCof = 0;     --技能伤害渐变百分比，1024为100%，正数为增加，负数为减少。注意此参数只能在渐变类型的AOE中使用！
	--skill.SetSubSkillForAreaDepth(1,dwSkillID,dwSkillLevel);  --对第一个搜索到的目标施放子技能。注意此参数只能在渐变类型的AOE中使用！
	--skill.SetSubSkillForAreaDepth(2,dwSkillID,dwSkillLevel);  --对第二个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(3,dwSkillID,dwSkillLevel);  --对第三个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(4,dwSkillID,dwSkillLevel);  --对第四个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(5,dwSkillID,dwSkillLevel);  --对第五个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(6,dwSkillID,dwSkillLevel);  --对第六个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(7,dwSkillID,dwSkillLevel);  --对第七个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(8,dwSkillID,dwSkillLevel);  --对第八个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(9,dwSkillID,dwSkillLevel);  --对第九个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(10,dwSkillID,dwSkillLevel);  --对第十个搜索到的目标施放子技能。

	----------------- BUFF相关 -------------------------------------------------
	--skill.BindBuff(1, nBuffID, nBuffLevel);		-- 设置1号位Buff
	--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
	--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
	--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff

	----------------- 设置Cool down --------------------------------------------
	-- 公共CD
	skill.SetPublicCoolDown(16);							-- 公共CD 1.5秒
	-- 技能CD, CoolDownIndex为CD位(共3个), nCoolDownID为CoolDownList.tab内的CDID
	skill.SetNormalCoolDown(1, 1072);	--技能普通CD
	--skill.SetCheckCoolDown(CoolDownIndex, nCoolDownID);	--只检查不走的CD
	----------------- 经验升级相关 ---------------------------------------------
	--注意,虽然这些内容可以在脚本内更改,但一般不做任何改动!
	--skill.dwLevelUpExp	= 0;    				-- 升级经验
	--skill.nExpAddOdds		= 1024;					-- 技能熟练度增长概率
	--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
	--skill.nBaseThreat		= 0;

	----------------- 技能是否可在吟唱中施放 -------------------------------------------------
	skill.bIgnorePrepareState = true	--技能是否可在吟唱中施放，吟唱、通道、蓄力技不能填true

	----------------- 技能消耗 -------------------------------------------------
	--skill.nCostLife		= 0;									-- 技能消耗生命值
	--skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
	--skill.nCostStamina	= 0;									-- 技能消耗的体力
	--skill.nCostItemType	= 0;									-- 技能消耗的物品类型
	--skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID
	--skill.nCostManaBasePercent = 0;							-- 技能消耗的内力百分比
	----------------- 聚气相关 -------------------------------------------------
	--skill.bIsAccumulate	= false;				-- 这里为true时,表示全部消耗豆点
	--skill.nNeedAccumulateCount = 0;				-- 技能需要气点的个数，当skill.bIsAccumulate	= true时生效
	--skill.SetSubsectionSkill(nBeginInterval, nEndInterval, dwSkillID, dwSkillLevel)

	----------------- 链状技能相关 ---------------------------------------------
	--skill.nChainBranch	= 1;					--链状技能分支数
	--skill.nChainDepth		= 3;					--链状技能层数
	--链状技能的子技能用skill.SetSubsectionSkill()设定

	----------------- 施放距离 -------------------------------------------------
	skill.nMinRadius = 0 * LENGTH_BASE;		-- 技能施放的最小距离
	skill.nMaxRadius = 20 * LENGTH_BASE;		-- 技能施放的最大距离

	--------------------弹射配置参数----------------------------------------------
	--skill.nSkillBulletType = 1;					--子弹类型(苍云为1、霸刀为3)
	--skill.nSkillBulletSubType = 0;				--子弹的子类型,(和BulletType一起确定不同子弹的不同表现，取值范围0~256)
	--skill.nAnimationPlayFrame = 0 				--延迟消失帧数，这个为发射子弹后动画等待时间,即从子弹打到目标开始算起,这么多帧之后,发送sbsEnd消息给表现.
	--skill.nMaxHitCount = 1						--弹射技能的最大攻击次数
	--skill.nMaxHitRadius = 1 * 64					--距离释放者的最大距离限定
	--skill.nMaxHoodleRadius = 10 * LENGTH_BASE  	--弹射搜索距离
	--skill.nMaxSearchCount = 1 					--是否限制弹射目标(0为不限 1为只打一个目标)
	----------------- 作用范围 -------------------------------------------------
	--skill.nProtectRadius = 0 * LENGTH_BASE;                     -- 环形和矩形AOE的保护距离，范围内不受伤害
	--skill.nHeight = 0 * LENGTH_BASE;                            -- AOE的高度，全高，圆柱体AOE中不填为2倍的nAreaRadius，矩形AOE中不填为nAreaRadius
	--skill.nRectWidth = 0 * LENGTH_BASE;                         -- 矩形AOE的宽度，全宽，不填为nAreaRadius
	skill.nAngleRange = 256;					-- 攻击范围的扇形角度范围
	skill.nAreaRadius = 20 * LENGTH_BASE;		-- 技能作用半径
	skill.nTargetCountLimit = 2;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制)

	----------------- 时间相关 -------------------------------------------------
	--skill.nPrepareFrames  	= 0;				-- 吟唱帧数
	--skill.nMinPrepareFrames  	= -1;				-- 急速效果最小吟唱帧数：默认是-1，吟唱不受急速影响。大于等于0则受急速影响，最小读条时间为填的值
	--skill.nChannelInterval	= 0; 				-- 通道技间隔时间
	--skill.nMinChannelInterval	= -1; 				-- 急速效果最小通道技间隔时间：默认是-1，通道不受急速影响。大于等于0则受急速影响，最通道间隔时间为填的值
	--skill.nChannelFrame		= 0;	 			-- 通道技持续时间，单位帧数
	--skill.nMinChannelFrame	= -1; 				-- 通常配合急速最小间隔时间使用。使得通道技能整体加速。如果这个填-1，间隔不是-1，高急速可以多1跳
	--skill.nBulletVelocity		= 0;				-- 子弹速度，单位 点/帧
	--skill.bInstantChannel = false;				-- 通道技能是否立刻造成一次伤害
	----------------- 阵法相关 -------------------------------------------------
	--skill.bIsFormationSkill	= false;			-- 是否阵眼技能
	--skill.nFormationRange		= 0 * LENGTH_BASE;	-- 结阵的范围
	--skill.nLeastFormationPopulation	= 2;		-- 结阵的范围的最少队员数（包括队长）

	----------------- 目标血量需求 ---------------------------------------------
	--skill.nTargetLifePercentMin	= 0;			-- 血量最小值>=
	--skill.nTargetLifePercentMax	= 100;			-- 血量最大值<=

	----------------- 自身血量需求 ---------------------------------------------
	--skill.nSelfLifePercentMin	= 0;				-- 血量最小值>=
	--skill.nSelfLifePercentMax	= 100;				-- 血量最大值<=

	----------------- 打退打断落马相关 -------------------------------------------------
	--skill.nBeatBackRate       = 1 * PERCENT_BASE;		-- 技能被打退的概率,默认1024
	--skill.nBrokenRate         = 1 * PERCENT_BASE;		-- 技能被打断的概率,默认1024
	--skill.nBreakRate			= 0 * PERCENT_BASE;		-- 打断目标施法的概率,基数1024

	--skill.nDismountingRate	= 0;					-- 将目标击落下马几率,基数1024，默认0

	----------------- 武器伤害相关 ---------------------------------------------
	--skill.nWeaponDamagePercent = 0;			-- 武器伤害百分比,对外功伤害有用。填0表示此次外功攻击不计算武器伤害,1024为100%

	return true;
end

-- 对技能执行的特殊条件检查，该函数可以在开始施放技能的时候被调用，以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意，最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态，以判断是否可以发出技能
	--在这里判断面前5尺处能否创建椅子，已经从左侧6尺处到面前5尺的障碍如何
	
	return nPreResult;
end

-- 技能升级时调用此函数，参数skill为升级后的skill，第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)
end

--技能遗忘时执行的函数,参数skill为遗忘的skill
function OnSkillForgotten(skill, player)
end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID, dwSkillSrcID)
	local actor = GetPlayer(dwSkillSrcID)
	if not actor then		
		return
	end
	local player = GetPlayer(dwCharacterID)
	if not player then
		RemoteCallToClient(actor.dwID, "OnSendSystemAnnounce", GetEditorString(7, 2772), "red")
		--RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_NOTICE_YELLOW", "目标不存在。", 5)
		actor.SendSystemMessage(GetEditorString(0, 491))
		actor.ClearCDTime(1072)
		return
	end
	local scene = actor.GetScene()
	if not scene then
		return
	end
	--player.GetScene().CreateNpc(51969, player.nX, player.nY, player.nZ, nChairFace, -1, "biaoyanzongkong" .. player.dwID)
	--[[特效不是专属，用它来判断是否创建了座椅.  创建成功后总控变量一直有记录,不能作为存在依据
	local chair_pss = scene.GetNpcByNickName("Artist_Chair_pss" .. actor.dwID)
	if chair_pss then
		RemoteCallToClient(actor.dwID, "OnOutputWarningMessage", "MSG_NOTICE_YELLOW", "你已经设置过座椅了。", 5)
		actor.SendSystemMessage("你已经设置过座椅了。")
		actor.ClearCDTime(1072)
		return 
	end
	--]]
	local npcControl = scene.GetNpcByNickName("biaoyanzongkong" .. actor.dwID)
	if not npcControl then
		actor.ClearCDTime(1072)
		return 
	end
	local chair = GetNpc(npcControl.GetCustomInteger4(12))
	if chair then
		RemoteCallToClient(actor.dwID, "OnOutputWarningMessage", "MSG_NOTICE_YELLOW", GetEditorString(10, 2978), 5)
		actor.SendSystemMessage(GetEditorString(10, 2978))
		actor.ClearCDTime(1072)
		return 
	end
	--创建椅子及其特效
	local radius = 5 --半径待定
	local nDir = actor.nFaceDirection * 2 * math.pi / 256 --面向从256转换成360°		
	local nChairX = actor.nX + radius * 64 * math.cos(nDir)
	local nChairY = actor.nY + radius * 64 * math.sin(nDir)
	local nChairFace = actor.nFaceDirection + 128
	chair = scene.CreateNpcWithEmployerID(51967, nChairX, nChairY, actor.nZ, nChairFace, 1 * GLOBAL.GAME_FPS, player.dwID)   --初次创建时一秒，如果位置合适，再设置到300秒
	chair_pss = scene.CreateNpc(51969, nChairX, nChairY, actor.nZ, nChairFace, 1 * GLOBAL.GAME_FPS, "Artist_Chair_pss" .. actor.dwID)   

	--创建侍女
	local radius1 = 0.9 --半径待定
	local seDir = nChairFace * 2 * math.pi / 256
	local seDir1 = seDir + (2 * math.pi / 4 - 10)  --椅子水平靠后一点，大约100°
	local seDir2 = seDir - (2 * math.pi / 4 - 10)
	local nMaids1X = nChairX + radius1 * 64 * math.cos(seDir1)
	local nMaids1Y = nChairY + radius1 * 64 * math.sin(seDir1)
	local nMaids2X = nChairX + radius1 * 64 * math.cos(seDir2)
	local nMaids2Y = nChairY + radius1 * 64 * math.sin(seDir2)	
	local maids1 = scene.CreateNpcWithEmployerID(51966, nMaids1X, nMaids1Y, actor.nZ, nChairFace, 1 * GLOBAL.GAME_FPS, player.dwID)
	local maids2 = scene.CreateNpcWithEmployerID(51966, nMaids2X, nMaids2Y, actor.nZ, nChairFace, 1 * GLOBAL.GAME_FPS, player.dwID)
	
	npcControl.SetCustomInteger4(12, chair.dwID)
	npcControl.SetCustomInteger4(16, chair_pss.dwID)
	npcControl.SetCustomInteger4(20, maids1.dwID)
	npcControl.SetCustomInteger4(24, maids2.dwID)
	
	actor.SetTimer(0.1 * GLOBAL.GAME_FPS, "scripts/skill/Quest/江湖百态/艺人_反馈座椅.lua", player.dwID, 1)  --延迟播放肉身的打坐动作，否则播不出来
	
--[[

   --]]
end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end

function OnRemove(nCharacterID, BuffID, nBuffLevel, nLeftFrame, nCustomValue, dwSkillSrcID, nStackNum, nBuffIndex, dwCasterID, dwCasterSkillID)
end
function OnTimer(player, nParam1, nParam2)
	local scene = player.GetScene()
	if not scene then
		return
	end
	local npc = scene.GetNpcByNickName("biaoyanzongkong" .. player.dwID)
	if not npc then
		player.ClearCDTime(1072)
		return 
	end
	if nParam2 == 1 then
		local chair = GetNpc(npc.GetCustomInteger4(12))
		local chair_pss = GetNpc(npc.GetCustomInteger4(16))
		local maids1 = GetNpc(npc.GetCustomInteger4(20))
		local maids2 = GetNpc(npc.GetCustomInteger4(24))
		if not chair or not chair_pss or not maids1 or not maids2 then
			RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_NOTICE_YELLOW", GetEditorString(10, 2979), 5)
			player.SendSystemMessage(GetEditorString(10, 2979))		
			player.SetTimer(0.1 * GLOBAL.GAME_FPS, "scripts/skill/Quest/江湖百态/艺人_反馈座椅.lua", 0, 2)
			return 
		end
		--通过椅子和玩家间的Z轴差距，以及椅子和侍女之间的Z轴差距来判定玩家附近是否有高地	
		if math.abs(player.nZ - chair.nZ) >= 256 or math.abs(chair.nZ - chair_pss.nZ) >= 128   
			or math.abs(chair.nZ - maids1.nZ) >= 128 or math.abs(chair.nZ - maids2.nZ) >= 128 then
			player.SendSystemMessage(GetEditorString(10, 2793))
			RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_NOTICE_YELLOW", GetEditorString(10, 2793), 4)
			player.SetTimer(0.1 * GLOBAL.GAME_FPS, "scripts/skill/Quest/江湖百态/艺人_反馈座椅.lua", 0, 2)
			return 
		end
		--还要再判断玩家点和座椅之间的障碍
		local nRetX1, nRetY1, nRetZ1 = scene.GetInterceptPoint(player.nX, player.nY, (player.nZ + 256), chair.nX, chair.nY, (chair.nZ + 256)) --判断提高半尺的障碍
		if nRetX1 ~= 0 or nRetY1 ~= 0 or nRetZ1 ~= 0 then
			player.SendSystemMessage(GetEditorString(10, 2793))
			RemoteCallToClient(player.dwID, "OnOutputWarningMessage", "MSG_NOTICE_YELLOW", GetEditorString(10, 2793), 4)
			player.SetTimer(0.1 * GLOBAL.GAME_FPS, "scripts/skill/Quest/江湖百态/艺人_反馈座椅.lua", 0, 2)
			return
		end

		local supporter = GetPlayer(nParam1)
		if not supporter then
			RemoteCallToClient(player.dwID, "OnSendSystemAnnounce", GetEditorString(7, 2772), "red")
			player.SendSystemMessage(GetEditorString(0, 491))
			player.SetTimer(0.1 * GLOBAL.GAME_FPS, "scripts/skill/Quest/江湖百态/艺人_反馈座椅.lua", 0, 2)
			return
		end
		
		supporter.SendSystemMessage(player.szName .. GetEditorString(10, 2980))
		RemoteCallToClient(supporter.dwID, "OnOutputWarningMessage", "MSG_NOTICE_GREEN", player.szName .. GetEditorString(10, 2981), 4)	
		player.Talk(GetEditorString(10, 3022) .. supporter.szName .. GetEditorString(10, 3023))
		chair.SetDisappearFrames(299 * GLOBAL.GAME_FPS)
		chair_pss.SetDisappearFrames(299 * GLOBAL.GAME_FPS)
		maids1.SetDisappearFrames(299 * GLOBAL.GAME_FPS)
		maids2.SetDisappearFrames(299 * GLOBAL.GAME_FPS)
	elseif nParam2 == 2 then
		local chair = GetNpc(npc.GetCustomInteger4(12))
		local chair_pss = GetNpc(npc.GetCustomInteger4(16))
		local maids1 = GetNpc(npc.GetCustomInteger4(20))
		local maids2 = GetNpc(npc.GetCustomInteger4(24))
		if chair then
			chair.SetDisappearFrames(1)
		end
		if chair_pss then
			chair_pss.SetDisappearFrames(1)
		end
		if maids1 then
			maids1.SetDisappearFrames(1)
		end
		if maids2 then
			maids2.SetDisappearFrames(1)
		end
		player.SetTimer(0.1 * GLOBAL.GAME_FPS, "scripts/skill/Quest/江湖百态/艺人_反馈座椅.lua", 0, 3)		
	elseif nParam2 == 3 then
		player.ClearCDTime(1072)
	end
end

 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com