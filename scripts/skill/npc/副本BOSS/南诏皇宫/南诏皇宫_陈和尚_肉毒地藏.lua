------------------------------------------------
-- 创建人   :  张豪	
-- 创建时间	:  2012-9-13
-- 效果备注	:  默认的技能脚本
------------------------------------------------

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")

tSkillData =
{
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 1
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 2
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 3
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 4
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 5
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 6
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 7
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 8
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0},		--level 9
	{nDamageBase = 1700, nDamageRand = 0, nCostMana = 0}, 		--level 10
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 11
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 12
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 13
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 14
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 15
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 16
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 17
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 18
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 19
	{nDamageBase = 3600, nDamageRand = 0, nCostMana = 0},		--level 20	
};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

	local dwSkillLevel = skill.dwLevel;
    	
	----------------- 魔法属性 -------------------------------------------------
	
	skill.AddAttribute( 
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK,                        
		ATTRIBUTE_TYPE.SKILL_POISON_DAMAGE,                                      
		tSkillData[dwSkillLevel].nDamageBase * 0.14,                                     
		0                                                                         
	);                                                                            
                                                                                  
	skill.AddAttribute(                                                           
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK,                        
		ATTRIBUTE_TYPE.SKILL_POISON_DAMAGE_RAND,                                 
		tSkillData[dwSkillLevel].nDamageRand * 0.14,                                     
		0                                                                         
	);                                                                            
                                                                                  
	skill.AddAttribute(                                                           
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,                        
		ATTRIBUTE_TYPE.CALL_POISON_DAMAGE,                                       
		0,                                                                        
		0                                                                         
	);

	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,			-- 属性作用模式
		ATTRIBUTE_TYPE.EXECUTE_SCRIPT,								-- 魔法属性
		"skill/npc/副本BOSS/南诏皇宫/南诏皇宫_陈和尚_肉毒地藏.lua",								--属性值1
		0															--属性值2
	);	

	----------------- 技能施放Buff需求 ---------------------------------------------
	--skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求自身Buff
	--skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求目标Buff
	--skill.AddSlowCheckSelfOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求自身属于自己的Buff
	--skill.AddSlowCheckDestOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求目标属于自己的Buff   

	-----------------技能施放技能需求-------------------------------------------
	--skill.AddCheckSelfLearntSkill(dwSkillID, dwSkillLevel, LevelCompareFlag);     --检查比较Caster自己已学习的技能ID和等级
	----------------- BUFF相关 -------------------------------------------------
	--skill.BindBuff(1, 4405, 1);		-- 设置1号位Buff
	--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
	--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
	--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff

	----------------- 设置Cool down --------------------------------------------
	-- 公共CD
	--skill.SetPublicCoolDown(16);							-- 公共CD 1.5秒
	-- 技能CD, CoolDownIndex为CD位(共3个), nCoolDownID为CoolDownList.tab内的CDID
	--skill.SetNormalCoolDown(CoolDownIndex, nCoolDownID);	--技能普通CD
	--skill.SetCheckCoolDown(CoolDownIndex, nCoolDownID);	--只检查不走的CD
	----------------- 经验升级相关 ---------------------------------------------
	--注意,虽然这些内容可以在脚本内更改,但一般不做任何改动!
	--skill.dwLevelUpExp	= 0;    				-- 升级经验
	--skill.nExpAddOdds		= 1024;					-- 技能熟练度增长概率
	--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
	--skill.nBaseThreat		= 0;

	----------------- 技能消耗 -------------------------------------------------
	--skill.nCostLife		= 0;									-- 技能消耗生命值
	--skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
	--skill.nCostStamina	= 0;									-- 技能消耗的体力
	--skill.nCostItemType	= 0;									-- 技能消耗的物品类型
	--skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID
    
	----------------- 聚气相关 -------------------------------------------------
	--skill.bIsAccumulate	= false;				-- 技能是否需要聚气
	--skill.SetSubsectionSkill(nBeginInterval, nEndInterval, dwSkillID, dwSkillLevel)
    
	----------------- 链状技能相关 ---------------------------------------------
	--skill.nChainBranch	= 1;					--链状技能分支数
	--skill.nChainDepth		= 3;					--链状技能层数
	--链状技能的子技能用skill.SetSubsectionSkill()设定
    
    
	----------------- 施放距离 -------------------------------------------------
	skill.nMinRadius		= 0 * LENGTH_BASE;		-- 技能施放的最小距离 
	skill.nMaxRadius		= 4 * LENGTH_BASE;		-- 技能施放的最大距离 

	----------------- 作用范围 -------------------------------------------------
	--skill.nProtectRadius = 0 * LENGTH_BASE;                     -- 环形和矩形AOE的保护距离，范围内不受伤害
	--skill.nHeight = 0 * LENGTH_BASE;                            -- AOE的高度，全高，圆柱体AOE中不填为2倍的nAreaRadius，矩形AOE中不填为nAreaRadius
	--skill.nRectWidth = 0 * LENGTH_BASE;                         -- 矩形AOE的宽度，全宽，不填为nAreaRadius
	skill.nAngleRange = 256;					-- 攻击范围的扇形角度范围
	if dwSkillLevel < 11 then
		skill.nAreaRadius = 3 * LENGTH_BASE + dwSkillLevel * LENGTH_BASE;		-- 技能作用半径
	else
		skill.nAreaRadius = 3 * LENGTH_BASE + (dwSkillLevel-10) * LENGTH_BASE;		-- 技能作用半径
	end
	skill.nTargetCountLimit	= 30;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制) 
    
	----------------- 时间相关 -------------------------------------------------
	--skill.nPrepareFrames  	= 0;				-- 吟唱帧数
	--skill.nChannelInterval	= 0; 				-- 通道技间隔时间 
	--skill.nChannelFrame		= 0;	 			-- 通道技持续时间，单位帧数 
	--skill.nBulletVelocity		= 0;				-- 子弹速度，单位 点/帧
    
	----------------- 阵法相关 -------------------------------------------------
	--skill.bIsFormationSkill	= false;			-- 是否阵眼技能
	--skill.nFormationRange		= 0 * LENGTH_BASE;	-- 结阵的范围
	--skill.nLeastFormationPopulation	= 2;		-- 结阵的范围的最少队员数（包括队长）
    
	----------------- 目标血量需求 ---------------------------------------------
	--skill.nTargetLifePercentMin	= 0;			-- 血量最小值>=
	--skill.nTargetLifePercentMax	= 100;			-- 血量最大值<=
    
	----------------- 自身血量需求 ---------------------------------------------
	--skill.nSelfLifePercentMin	= 0;				-- 血量最小值>=
	--skill.nSelfLifePercentMax	= 100;				-- 血量最大值<=
    
	----------------- 打退打断落马相关 -------------------------------------------------
	--skill.nBeatBackRate       = 1 * PERCENT_BASE;		-- 技能被打退的概率,默认1024
	--skill.nBrokenRate         = 1 * PERCENT_BASE;		-- 技能被打断的概率,默认1024
	--skill.nBreakRate			= 0 * PERCENT_BASE;		-- 打断目标施法的概率,基数1024
	
	--skill.nDismountingRate	= 0;					-- 将目标击落下马几率,基数1024，默认0
	
	----------------- 武器伤害相关 ---------------------------------------------
	--skill.nWeaponDamagePercent		= 0;			-- 武器伤害百分比,对外功伤害有用。填0表示此次外功攻击不计算武器伤害,1024为100%
	
	return true;
end



-- 对技能执行的特殊条件检查，该函数可以在开始施放技能的时候被调用，以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意，最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态，以判断是否可以发出技能
	return nPreResult;
end

-- 技能升级时调用此函数，参数skill为升级后的skill，第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)
	
end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID)
	local cPlayer = GetPlayer(dwCharacterID)
	if not cPlayer then
		return
	end
	local scene = cPlayer.GetScene()
	if not scene then
		return
	end
	if scene.dwMapID == 140 then
		local nBuff1 = cPlayer.GetBuff(4405, 1)
		local nBuff2 = cPlayer.GetBuff(4403, 1)
		local nBuff3 = cPlayer.GetBuff(4404, 1)
		if nBuff3 then
			if nBuff3.nStackNum < 2 then
				cPlayer.AddBuff(0, 99, 4404, 1)
			elseif nBuff3.nStackNum == 2 then
				cPlayer.DelGroupBuff(4404, 1)
				cPlayer.AddBuff(0,99,4455,1)
			end
		end
		if nBuff2 then
			if nBuff2.nStackNum < 2 then
				cPlayer.AddBuff(0, 99, 4403, 1)
			elseif nBuff2.nStackNum == 2 then
				cPlayer.DelGroupBuff(4403, 1)
				cPlayer.AddBuff(0,99,4404,1)
			end
		end
		if not nBuff1 and not nBuff2 and not nBuff3  and not cPlayer.GetBuff(4455,1) then
			cPlayer.AddBuff(0,99,4405,1)
		end
		if nBuff1 then
			if nBuff1.nStackNum < 3 then
				cPlayer.AddBuff(0, 99, 4405, 1)
			elseif nBuff1.nStackNum == 3 then
				cPlayer.DelGroupBuff(4405, 1)
				cPlayer.AddBuff(0,99,4403,1)
			end
		end
	end
	if scene.dwMapID == 155 then
		local nBuff4 = cPlayer.GetBuff(4405, 2)
		local nBuff5 = cPlayer.GetBuff(4403, 2)
		local nBuff6 = cPlayer.GetBuff(4404, 2)
		if nBuff6 then
			if nBuff6.nStackNum < 2 then
				cPlayer.AddBuff(0, 99, 4404, 2)
			elseif nBuff6.nStackNum == 2 then
				cPlayer.DelGroupBuff(4404, 2)
				cPlayer.AddBuff(0,99,4455,2)
			end
		end
		if nBuff5 then
			if nBuff5.nStackNum < 2 then
				cPlayer.AddBuff(0, 99, 4403, 2)
			elseif nBuff5.nStackNum == 2 then
				cPlayer.DelGroupBuff(4403, 2)
				cPlayer.AddBuff(0,99,4404,2)
			end
		end
		if not nBuff4 and not nBuff5 and not nBuff6  and not cPlayer.GetBuff(4455,2) then
			cPlayer.AddBuff(0,99,4405,2)
		end
		if nBuff4 then
			if nBuff4.nStackNum < 3 then
				cPlayer.AddBuff(0, 99, 4405, 2)
			elseif nBuff4.nStackNum == 3 then
				cPlayer.DelGroupBuff(4405, 2)
				cPlayer.AddBuff(0,99,4403,2)
			end
		end
	end

end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end

 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com