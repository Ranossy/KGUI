------------------------------------------------
-- 文件名    :  防御_生缘.lua
-- 创建人    :  zhx
-- 创建时间  :  2011-04-02
------------------------------------------------

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")

tSkillData =
{
	{nRate1 = 100, nRate2 = 50 , nRate3 = 100 },		--level 1
	{nRate1 = 200, nRate2 = 100, nRate3 = 200 },		--level 2

};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

    local dwSkillLevel = skill.dwLevel;
    	
   	----------------- 魔法属性 -------------------------------------------------
   	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK, --混元防御
		ATTRIBUTE_TYPE.NEUTRAL_MAGIC_SHIELD_PERCENT,
		tSkillData[dwSkillLevel].nRate1, 
		0
		);	
   	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK, --阴性防御
		ATTRIBUTE_TYPE.LUNAR_MAGIC_SHIELD_PERCENT,
		tSkillData[dwSkillLevel].nRate1, 
		0
		);
   	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK, --外防
		ATTRIBUTE_TYPE.PHYSICS_SHIELD_PERCENT,
		tSkillData[dwSkillLevel].nRate1, 
		0
		);
   	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK, --毒性防御
		ATTRIBUTE_TYPE.POISON_MAGIC_SHIELD_PERCENT,
		tSkillData[dwSkillLevel].nRate1, 
		0
		);
   	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK, --阳性防御
		ATTRIBUTE_TYPE.SOLAR_MAGIC_SHIELD_PERCENT,
		tSkillData[dwSkillLevel].nRate1, 
		0
		);
   	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK, --招架
		ATTRIBUTE_TYPE.PARRY_PERCENT,
		tSkillData[dwSkillLevel].nRate2, 
		0
		);
   	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK, --拆招
		ATTRIBUTE_TYPE.PARRYVALUE_PERCENT,
		tSkillData[dwSkillLevel].nRate3, 
		0
		);

	----------------- 技能施放Buff需求 ---------------------------------------------
    --skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求自身Buff
    --skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求目标Buff

		--skill.BindBuff(1, 1715, 1);		-- 设置1号位Buff
		--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
		--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
		--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff
		--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
		--skill.nBaseThreat		= 0;

	----------------- 技能消耗 -------------------------------------------------
		--skill.nCostLife		= 0;									-- 技能消耗生命值
    --skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
    --skill.nCostStamina	= 0;									-- 技能消耗的体力
    --skill.nCostItemType	= 0;									-- 技能消耗的物品类型
    --skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID
    
    ----------------- 施放距离 -------------------------------------------------
		--skill.nMinRadius		= 0 * LENGTH_BASE;		-- 技能施放的最小距离 
		skill.nMaxRadius		= 4 * LENGTH_BASE;		-- 技能施放的最大距离 

	----------------- 作用范围 -------------------------------------------------
		skill.nAngleRange		= 256;					-- 攻击范围的扇形角度范围 
		skill.nAreaRadius		= 50 * LENGTH_BASE;		-- 技能作用半径 
		skill.nTargetCountLimit	= 30;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制) 
	
    return true;
end
-- 对技能执行的特殊条件检查，该函数可以在开始施放技能的时候被调用，以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意，最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态，以判断是否可以发出技能
    return nPreResult;
end

-- 技能升级时调用此函数，参数skill为升级后的skill，第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)
end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID)
end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end

 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com