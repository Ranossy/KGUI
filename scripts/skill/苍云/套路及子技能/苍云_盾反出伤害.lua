---------------------------------------------------------------------->
-- 脚本名称:	scripts/skill/Default.lua
-- 更新时间:	2013/9/9 16:05:17
-- 更新用户:	taoli
-- 脚本说明:	
----------------------------------------------------------------------<
------------------------------------------------
-- 创建人   :  王洋	
-- 创建时间	:  2007-12-11
-- 效果备注	:  默认的技能脚本
------------------------------------------------

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")

tSkillData = 
{
	{nDamageBase = 1000, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 1.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 1.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 1.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 1.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 2.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 2.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 2.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 2.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 3, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 3.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 3.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 3.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 3.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 4.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 4.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 4.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 4.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 5, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 5.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 5.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 5.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 5.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 6.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 7, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 7.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 7.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 7.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 7.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 8.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 8.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 8.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 8.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 9, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 9.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 9.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 9.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 9.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 10, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 10.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 10.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 10.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 10.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 11, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 11.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 11.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 11.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 11.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 12, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 12.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 12.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 12.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 12.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 13, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 13.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 13.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 13.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 13.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 14, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 14.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 14.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 14.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 14.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 15, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 15.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 15.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 15.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 15.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 16, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 16.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 16.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 16.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 16.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 17, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 17.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 17.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 17.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 17.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 18, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 18.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 18.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 18.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 18.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 19, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 19.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 19.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 19.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 19.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 20, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 20.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 20.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 20.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 20.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 21, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 21.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 21.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 21.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 21.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 22, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 22.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 22.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 22.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 22.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 23, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 23.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 23.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 23.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 23.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 24, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 24.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 24.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 24.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 24.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 25, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 25.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 25.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 25.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 25.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 26, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 26.2, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 26.4, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 26.6, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 26.8, nDamageRand = 0, nCostMana = 0},
	{nDamageBase = 1000 * 27, nDamageRand = 0, nCostMana = 0},
	
};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

	local dwSkillLevel = skill.dwLevel;
    	
	----------------- 魔法属性 -------------------------------------------------
	--[[
   	skill.AddAttribute(
   		ATTRIBUTE_EFFECT_MODE.nAttributeEffectMode,					-- 属性作用模式
   		ATTRIBUTE_TYPE.nAttributeKey,								-- 魔法属性
   		nAttributeValue1,											-- 属性值1
   		nAttributeValue2											-- 属性值2
   		);
    --]]
	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK,
		ATTRIBUTE_TYPE.SKILL_PHYSICS_DAMAGE,
		tSkillData[dwSkillLevel].nDamageBase,
		0
	);

	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_AND_ROLLBACK,
		ATTRIBUTE_TYPE.SKILL_PHYSICS_DAMAGE_RAND,
		tSkillData[dwSkillLevel].nDamageRand,
		0
	);

	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.CALL_PHYSICS_DAMAGE,
		0,
		0
	);
    
	----------------- 技能施放Buff需求 ---------------------------------------------
	--skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求自身Buff
	--skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求目标Buff
	--skill.AddSlowCheckSelfOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求自身属于自己的Buff
	skill.AddSlowCheckDestOwnBuff(8473, 1, BUFF_COMPARE_FLAG.EQUAL, 1, BUFF_COMPARE_FLAG.EQUAL);		-- 需求自身Buff   --盾墙状态下标记buff
	--skill.AddSlowCheckDestOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求目标属于自己的Buff   

	-----------------技能施放技能需求-------------------------------------------
	--skill.AddCheckSelfLearntSkill(dwSkillID, dwSkillLevel, LevelCompareFlag);     --检查比较Caster自己已学习的技能ID和等级

	-----------------技能施放姿态需求(苍云)----------------------------------------
	--skill.nNeedPoseState = 1    --检查姿态，1为擎刀姿态，2为擎盾姿态

	----------------技能伤害给小队回血------------------------------------------

	--skill.nDamageToLifeForParty = 0	--技能伤害给小队成员百分比回血
	
	-----------------技能渐变相关-------------------------------------------
	--skill.nAttackAttenuationCof = 0;     --技能伤害渐变百分比，1024为100%，正数为增加，负数为减少。注意此参数只能在渐变类型的AOE中使用！
	--skill.SetSubSkillForAreaDepth(1,dwSkillID,dwSkillLevel);  --对第一个搜索到的目标施放子技能。注意此参数只能在渐变类型的AOE中使用！
	--skill.SetSubSkillForAreaDepth(2,dwSkillID,dwSkillLevel);  --对第二个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(3,dwSkillID,dwSkillLevel);  --对第三个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(4,dwSkillID,dwSkillLevel);  --对第四个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(5,dwSkillID,dwSkillLevel);  --对第五个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(6,dwSkillID,dwSkillLevel);  --对第六个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(7,dwSkillID,dwSkillLevel);  --对第七个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(8,dwSkillID,dwSkillLevel);  --对第八个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(9,dwSkillID,dwSkillLevel);  --对第九个搜索到的目标施放子技能。
	--skill.SetSubSkillForAreaDepth(10,dwSkillID,dwSkillLevel);  --对第十个搜索到的目标施放子技能。
	
	----------------- BUFF相关 -------------------------------------------------
	--skill.BindBuff(1, nBuffID, nBuffLevel);		-- 设置1号位Buff
	--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
	--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
	--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff

	----------------- 设置Cool down --------------------------------------------
	-- 公共CD
	--skill.SetPublicCoolDown(16);							-- 公共CD 1.5秒
	-- 技能CD, CoolDownIndex为CD位(共3个), nCoolDownID为CoolDownList.tab内的CDID
	--skill.SetNormalCoolDown(CoolDownIndex, nCoolDownID);	--技能普通CD
	--skill.SetCheckCoolDown(CoolDownIndex, nCoolDownID);	--只检查不走的CD
	----------------- 经验升级相关 ---------------------------------------------
	--注意,虽然这些内容可以在脚本内更改,但一般不做任何改动!
	--skill.dwLevelUpExp	= 0;    				-- 升级经验
	--skill.nExpAddOdds		= 1024;					-- 技能熟练度增长概率
	--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
	--skill.nBaseThreat		= 0;
	
	----------------- 技能是否可在吟唱中施放 -------------------------------------------------
	--skill.bIgnorePrepareState = true	--技能是否可在吟唱中施放，吟唱、通道、蓄力技不能填true
	
	----------------- 技能消耗 -------------------------------------------------
	--skill.nCostLife		= 0;									-- 技能消耗生命值
	--skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
	--skill.nCostStamina	= 0;									-- 技能消耗的体力
	--skill.nCostItemType	= 0;									-- 技能消耗的物品类型
	--skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID
    
	----------------- 聚气相关 -------------------------------------------------
	--skill.bIsAccumulate	= false;				-- 技能是否需要聚气
	--skill.nNeedAccumulateCount = 0;				-- 技能需要气点的个数，当skill.bIsAccumulate	= true时生效
	--skill.SetSubsectionSkill(nBeginInterval, nEndInterval, dwSkillID, dwSkillLevel)
    
	----------------- 链状技能相关 ---------------------------------------------
	--skill.nChainBranch	= 1;					--链状技能分支数
	--skill.nChainDepth		= 3;					--链状技能层数
	--链状技能的子技能用skill.SetSubsectionSkill()设定
    
	----------------- 施放距离 -------------------------------------------------
	skill.nMinRadius		= 0 * LENGTH_BASE;		-- 技能施放的最小距离 
	skill.nMaxRadius		= 20 * LENGTH_BASE;		-- 技能施放的最大距离 

	----------------- 作用范围 -------------------------------------------------
	--skill.nProtectRadius = 0 * LENGTH_BASE;                     -- 环形和矩形AOE的保护距离，范围内不受伤害
	--skill.nHeight = 0 * LENGTH_BASE;                            -- AOE的高度，全高，圆柱体AOE中不填为2倍的nAreaRadius，矩形AOE中不填为nAreaRadius
	--skill.nRectWidth = 0 * LENGTH_BASE;                         -- 矩形AOE的宽度，全宽，不填为nAreaRadius
	skill.nAngleRange		= 256;					-- 攻击范围的扇形角度范围
	skill.nAreaRadius		= 8 * LENGTH_BASE;		-- 技能作用半径 
	skill.nTargetCountLimit	= 5;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制) 
    
	----------------- 时间相关 -------------------------------------------------

	skill.nChannelInterval = 16;     -- 通道技间隔时间
	--skill.nChannelFrame		= 0;	 			-- 通道技持续时间，单位帧数
	--skill.nMinChannelFrame	= -1; 				-- 通常配合急速最小间隔时间使用。使得通道技能整体加速。如果这个填-1，间隔不是-1，高急速可以多1跳
	--skill.nBulletVelocity		= 0;				-- 子弹速度，单位 点/帧
    
	----------------- 阵法相关 -------------------------------------------------
	--skill.bIsFormationSkill	= false;			-- 是否阵眼技能
	--skill.nFormationRange		= 0 * LENGTH_BASE;	-- 结阵的范围
	--skill.nLeastFormationPopulation	= 2;		-- 结阵的范围的最少队员数（包括队长）
    
	----------------- 目标血量需求 ---------------------------------------------
	--skill.nTargetLifePercentMin	= 0;			-- 血量最小值>=
	--skill.nTargetLifePercentMax	= 100;			-- 血量最大值<=
    
	----------------- 自身血量需求 ---------------------------------------------
	--skill.nSelfLifePercentMin	= 0;				-- 血量最小值>=
	--skill.nSelfLifePercentMax	= 100;				-- 血量最大值<=
    
	----------------- 打退打断落马相关 -------------------------------------------------
	--skill.nBeatBackRate       = 1 * PERCENT_BASE;		-- 技能被打退的概率,默认1024
	--skill.nBrokenRate         = 1 * PERCENT_BASE;		-- 技能被打断的概率,默认1024
	--skill.nBreakRate			= 0 * PERCENT_BASE;		-- 打断目标施法的概率,基数1024
	
	--skill.nDismountingRate	= 0;					-- 将目标击落下马几率,基数1024，默认0
	
	----------------- 武器伤害相关 ---------------------------------------------
	skill.nWeaponDamagePercent = 1024;			-- 武器伤害百分比,对外功伤害有用。填0表示此次外功攻击不计算武器伤害,1024为100%
	
	return true;
end

-- 对技能执行的特殊条件检查，该函数可以在开始施放技能的时候被调用，以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意，最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态，以判断是否可以发出技能
	return nPreResult;
end

-- 技能升级时调用此函数，参数skill为升级后的skill，第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)
	
end

--技能遗忘时执行的函数,参数skill为遗忘的skill
function OnSkillForgotten(skill, player)

end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID,dwSkillSrcID)
end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end

 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com