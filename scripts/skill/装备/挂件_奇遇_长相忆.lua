---------------------------------------------------------------------->
-- 脚本名称:	scripts/skill/装备/挂件_奇遇_长相忆.lua
-- 更新时间:	2015/7/7 14:36:23
-- 更新用户:	xutong3
-- 脚本说明:
----------------------------------------------------------------------<
-- 创建人   :  CBG
-- 创建时间	:  2014-05-21
-- 效果备注	:  默认的技能脚本
------------------------------------------------

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")
Include("scripts/Map/世界奇遇/include/小剧场剧情章节.lua")
tSkillData =
{
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 1
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 2
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 3
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 4
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 5
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 6
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 7
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 8
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 9
	{nDamageBase = 0, nDamageRand = 0, nCostMana = 0}, --level 10
};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

	local dwSkillLevel = skill.dwLevel;

	----------------- 魔法属性 -------------------------------------------------
	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_SELF_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.EXECUTE_SCRIPT,
		"skill/装备/挂件_奇遇_长相忆.lua",
		0
	);

	----------------- 技能施放Buff需求 ---------------------------------------------
	--skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求自身Buff
	--skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求目标Buff
	--skill.AddSlowCheckSelfOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求自身属于自己的Buff
	--skill.AddSlowCheckDestOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求目标属于自己的Buff

	-----------------技能施放技能需求-------------------------------------------
	--skill.AddCheckSelfLearntSkill(dwSkillID, dwSkillLevel, LevelCompareFlag);     --检查比较Caster自己已学习的技能ID和等级
	----------------- BUFF相关 -------------------------------------------------
	--skill.BindBuff(1, nBuffID, nBuffLevel);		-- 设置1号位Buff
	--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
	--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
	--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff

	----------------- 设置Cool down --------------------------------------------
	-- 公共CD
	--skill.SetPublicCoolDown(16);							-- 公共CD 1.5秒
	-- 技能CD, CoolDownIndex为CD位(共3个), nCoolDownID为CoolDownList.tab内的CDID
	skill.SetNormalCoolDown(1, 868);
	--skill.SetCheckCoolDown(CoolDownIndex, nCoolDownID);	--只检查不走的CD
	----------------- 经验升级相关 ---------------------------------------------
	--注意,虽然这些内容可以在脚本内更改,但一般不做任何改动!
	--skill.dwLevelUpExp	= 0;    				-- 升级经验
	--skill.nExpAddOdds		= 1024;					-- 技能熟练度增长概率
	--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
	--skill.nBaseThreat		= 0;

	----------------- 技能消耗 -------------------------------------------------
	--skill.nCostLife		= 0;									-- 技能消耗生命值
	--skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
	--skill.nCostStamina	= 0;									-- 技能消耗的体力
	--skill.nCostItemType	= 0;									-- 技能消耗的物品类型
	--skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID

	----------------- 聚气相关 -------------------------------------------------
	--skill.bIsAccumulate	= false;				-- 技能是否需要聚气
	--skill.SetSubsectionSkill(nBeginInterval, nEndInterval, dwSkillID, dwSkillLevel)

	----------------- 链状技能相关 ---------------------------------------------
	--skill.nChainBranch	= 1;					--链状技能分支数
	--skill.nChainDepth		= 3;					--链状技能层数
	--链状技能的子技能用skill.SetSubsectionSkill()设定

	----------------- 施放距离 -------------------------------------------------
	skill.nMinRadius = 0 * LENGTH_BASE;		-- 技能施放的最小距离
	skill.nMaxRadius = 4 * LENGTH_BASE;		-- 技能施放的最大距离

	----------------- 作用范围 -------------------------------------------------
	--skill.nProtectRadius = 0 * LENGTH_BASE;                     -- 环形和矩形AOE的保护距离,范围内不受伤害
	--skill.nHeight = 0 * LENGTH_BASE;                            -- AOE的高度,全高,圆柱体AOE中不填为2倍的nAreaRadius,矩形AOE中不填为nAreaRadius
	--skill.nRectWidth = 0 * LENGTH_BASE;                         -- 矩形AOE的宽度,全宽,不填为nAreaRadius
	skill.nAngleRange = 256;					-- 攻击范围的扇形角度范围
	--skill.nAreaRadius		= 0 * LENGTH_BASE;		-- 技能作用半径
	--skill.nTargetCountLimit	= 2;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制)

	----------------- 时间相关 -------------------------------------------------
	--skill.nPrepareFrames  	= 0;				-- 吟唱帧数
	--skill.nChannelInterval	= 0; 				-- 通道技间隔时间
	--skill.nChannelFrame		= 0;	 			-- 通道技持续时间,单位帧数
	--skill.nBulletVelocity		= 0;				-- 子弹速度,单位 点/帧

	----------------- 阵法相关 -------------------------------------------------
	--skill.bIsFormationSkill	= false;			-- 是否阵眼技能
	--skill.nFormationRange		= 0 * LENGTH_BASE;	-- 结阵的范围
	--skill.nLeastFormationPopulation	= 2;		-- 结阵的范围的最少队员数（包括队长）

	----------------- 目标血量需求 ---------------------------------------------
	--skill.nTargetLifePercentMin	= 0;			-- 血量最小值>=
	--skill.nTargetLifePercentMax	= 100;			-- 血量最大值<=

	----------------- 自身血量需求 ---------------------------------------------
	--skill.nSelfLifePercentMin	= 0;				-- 血量最小值>=
	--skill.nSelfLifePercentMax	= 100;				-- 血量最大值<=

	----------------- 打退打断落马相关 -------------------------------------------------
	--skill.nBeatBackRate       = 1 * PERCENT_BASE;		-- 技能被打退的概率,默认1024
	--skill.nBrokenRate         = 1 * PERCENT_BASE;		-- 技能被打断的概率,默认1024
	--skill.nBreakRate			= 0 * PERCENT_BASE;		-- 打断目标施法的概率,基数1024

	--skill.nDismountingRate	= 0;					-- 将目标击落下马几率,基数1024,默认0

	----------------- 武器伤害相关 ---------------------------------------------
	--skill.nWeaponDamagePercent		= 0;			-- 武器伤害百分比,对外功伤害有用。填0表示此次外功攻击不计算武器伤害,1024为100%

	return true;
end

-- 对技能执行的特殊条件检查,该函数可以在开始施放技能的时候被调用,以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意,最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态,以判断是否可以发出技能
	if player.dwWaistItemIndex ~= 13902 then -- 检查是不是装了背部挂件,腰部用 EQUIPMENT_REPRESENT.WAIST_EXTEND
		return false
	end
	return nPreResult;
end

-- 技能升级时调用此函数,参数skill为升级后的skill,第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)

end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID)
	local player = GetPlayer(dwCharacterID)
	if not player then
		return
	end
	if not player.nMoveState == MOVE_STATE.ON_STAND then
		player.SendSystemMessage(GetEditorString(2, 8380))
		return
	end
--	player.DoAction(0, 13959)
	player.AddBuff(1,1,9185,1)
	player.DoAction(0, 13959)
	RemoteCallToClient(player.dwID, "CallUIGlobalFunction", "PlayBgMusic", GetEditorString(7, 8396) )
	CheckPos(player)
end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end
local tInfo = {
	[156] =	 {tPos = {44255, 62472, 1063424,2},tShow = {21,22,22,23,24},},
	[151] = {tPos = {33215, 64868, 1052096, 96},tShow = {21,22,22,23,24},},
	[13] = 	{tPos = {70564, 69462, 1052928, 129},tLimitShow = { {nFlag = 325,tShow= {12,22,25},},{nFlag = 327,tShow= {25,13,22},}, {nFlag = 329,tShow= {25,14,22},},{nFlag = 321,tShow= {11,22},},            },},
	[194] = {tPos = {73596, 27592, 1123776, 239},tLimitShow = { {nFlag = 339,tShow= {22,26,26},},{nFlag = 341,tShow= {22,27,27},},},},
	[193] = {tPos = {60642, 100775, 1055680, 46},tShow = {22,28},nFlag=355,},
	[150] = {tPos = {110957, 99355, 1093440, 26},tShow = {22,28},nFlag=349,},
}
local dwCDBuff = 9124
function CheckPos(player)
	if player.GetBuff(dwCDBuff, 1) then
		return
	end
	if not tInfo[player.GetMapID()] then
		return
	end
	local tMapInfo = tInfo[player.GetMapID()]
	if GetDistanceSq(player.nX, player.nY, player.nZ, tMapInfo.tPos[1], tMapInfo.tPos[2], tMapInfo.tPos[3]) > 3686400 then--30尺
		return
	end
	local scene = player.GetScene()

	local npc = scene.GetNpcByNickName("Adventure_qiuhuashanP" .. player.dwID)
	if npc then
		return
	end
	if tMapInfo.nFlag and not player.GetAdventureFlag(tMapInfo.nFlag) then
		return
	end
	player.AddBuff(1, 1, dwCDBuff, 1, 4)
	npc = scene.CreateNpc(44138, tMapInfo.tPos[1], tMapInfo.tPos[2], tMapInfo.tPos[3], tMapInfo.tPos[4], 4800, "Adventure_qiuhuashanP" .. player.dwID, player.dwID)
	if not npc then
		return
	end
	if tMapInfo.tShow then
		SmallTheater_CreatDirector(player, tMapInfo.tShow[Random(#tMapInfo.tShow)]) -- 私有演讲者
	elseif tMapInfo.tLimitShow then
		for i = 1, #tMapInfo.tLimitShow do
			if player.GetAdventureFlag(tMapInfo.tLimitShow[i].nFlag) then
				SmallTheater_CreatDirector(player, tMapInfo.tLimitShow[i].tShow[Random(#tMapInfo.tLimitShow[i].tShow)]) -- 私有演讲者
				break
			end
		end
	else
		npc.SetDisappearFrames(160)
	end
	
end
 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com