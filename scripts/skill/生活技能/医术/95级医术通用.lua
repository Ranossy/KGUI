---------------------------------------------------------------------->
-- 脚本名称:	scripts/skill/生活技能/医术/95级医术通用.lua
-- 更新时间:	2015/8/31 17:38:35
-- 更新用户:	mantong2
-- 脚本说明:
----------------------------------------------------------------------<
------------------------------------------------
-- 创建人   :  王洋
-- 创建时间	:  2007-12-11
-- 效果备注	:  默认的技能脚本
------------------------------------------------

--------------脚本文件开始------------------------------------------------
Include("scripts/Include/Skill.lh")
Include("scripts/Include/Player.lh")

tSkillData =
{
	{nDamageBase = 9602, nDamageRand = 1, nCostMana = 0}, --level 1 --护命丹
	{nDamageBase = 9604, nDamageRand = 1, nCostMana = 0}, --level 2 --点骨丹
	{nDamageBase = 9605, nDamageRand = 1, nCostMana = 0}, --level 3 --养神丹
	{nDamageBase = 9603, nDamageRand = 1, nCostMana = 0}, --level 4 --补心丹
	{nDamageBase = 9606, nDamageRand = 1, nCostMana = 0}, --level 5 --轻身丹
	{nDamageBase = 9607, nDamageRand = 1, nCostMana = 0}, --level 6 --玄元丹
	{nDamageBase = 9608, nDamageRand = 1, nCostMana = 0}, --level 7 --枕中丹
	{nDamageBase = 9609, nDamageRand = 1, nCostMana = 0}, --level 8 --青霜丹
	{nDamageBase = 9610, nDamageRand = 1, nCostMana = 0}, --level 9 --紫雪丹
	{nDamageBase = 9611, nDamageRand = 1, nCostMana = 0}, --level 10--清灵丹
	{nDamageBase = 9815, nDamageRand = 1, nCostMana = 0}, --level 11--玉蟾丹
	{nDamageBase = 9816, nDamageRand = 1, nCostMana = 0}, --level 12--玉华丹
	{nDamageBase = 9612, nDamageRand = 1, nCostMana = 0}, --level 13--震灵丹
	{nDamageBase = 9613, nDamageRand = 1, nCostMana = 0}, --level 14--妙香丹
	{nDamageBase = 9614, nDamageRand = 1, nCostMana = 0}, --level 15--玉枢丹
	{nDamageBase = 9615, nDamageRand = 1, nCostMana = 0}, --level 16--灵寿丹
	{nDamageBase = 9616, nDamageRand = 1, nCostMana = 0}, --level 17--通周丹
	{nDamageBase = 9617, nDamageRand = 1, nCostMana = 0}, --level 18--黄精丹
	{nDamageBase = 9602, nDamageRand = 2, nCostMana = 0}, --level 19--佳・护命丹
	{nDamageBase = 9604, nDamageRand = 2, nCostMana = 0}, --level 20--佳・点骨丹
	{nDamageBase = 9605, nDamageRand = 2, nCostMana = 0}, --level 21--佳・养神丹
	{nDamageBase = 9603, nDamageRand = 2, nCostMana = 0}, --level 22--佳・补心丹
	{nDamageBase = 9606, nDamageRand = 2, nCostMana = 0}, --level 23--佳・轻身丹
	{nDamageBase = 9607, nDamageRand = 2, nCostMana = 0}, --level 24--佳・玄元丹
	{nDamageBase = 9608, nDamageRand = 2, nCostMana = 0}, --level 25--佳・枕中丹
	{nDamageBase = 9609, nDamageRand = 2, nCostMana = 0}, --level 26--佳・青霜丹
	{nDamageBase = 9610, nDamageRand = 2, nCostMana = 0}, --level 27--佳・紫雪丹
	{nDamageBase = 9611, nDamageRand = 2, nCostMana = 0}, --level 28--佳・清灵丹
	{nDamageBase = 9815, nDamageRand = 2, nCostMana = 0}, --level 29--佳・玉蟾丹
	{nDamageBase = 9816, nDamageRand = 2, nCostMana = 0}, --level 30--佳・玉华丹
	{nDamageBase = 9612, nDamageRand = 2, nCostMana = 0}, --level 31--佳・震灵丹
	{nDamageBase = 9613, nDamageRand = 2, nCostMana = 0}, --level 32--佳・妙香丹
	{nDamageBase = 9614, nDamageRand = 2, nCostMana = 0}, --level 33--佳・玉枢丹
	{nDamageBase = 9615, nDamageRand = 2, nCostMana = 0}, --level 34--佳・灵寿丹
	{nDamageBase = 9616, nDamageRand = 2, nCostMana = 0}, --level 35--佳・通周丹
	{nDamageBase = 9617, nDamageRand = 2, nCostMana = 0}, --level 36--佳・黄精丹
	{nDamageBase = 9798, nDamageRand = 1, nCostMana = 0}, --level 37--玉璃丹
	{nDamageBase = 9799, nDamageRand = 1, nCostMana = 0}, --level 38--白信丹
	{nDamageBase = 9798, nDamageRand = 2, nCostMana = 0}, --level 39--佳・玉璃丹
	{nDamageBase = 9799, nDamageRand = 2, nCostMana = 0}, --level 40--佳・白信丹
};

--设置武功技能级别相关数值
function GetSkillLevelData(skill)

	local dwSkillLevel = skill.dwLevel;

	----------------- 魔法属性 -------------------------------------------------
	--[[if dwSkillLevel == 35  then
		skill.AddAttribute(
			ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,
			ATTRIBUTE_TYPE.CURRENT_LIFE,
			20000,
			0
		);
	elseif dwSkillLevel == 36 then
		skill.AddAttribute(
			ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,
			ATTRIBUTE_TYPE.CURRENT_MANA,
			10000,
			0
		);
	else--]]
	skill.AddAttribute(
		ATTRIBUTE_EFFECT_MODE.EFFECT_TO_DEST_NOT_ROLLBACK,
		ATTRIBUTE_TYPE.CALL_BUFF,
		tSkillData[dwSkillLevel].nDamageBase,
		tSkillData[dwSkillLevel].nDamageRand
	);
	--end

	----------------- 技能施放Buff需求 ---------------------------------------------
	--skill.AddSlowCheckSelfBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求自身Buff
	--skill.AddSlowCheckDestBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);		-- 需求目标Buff
	--skill.AddSlowCheckSelfOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求自身属于自己的Buff
	--skill.AddSlowCheckDestOwnBuff(dwBuffID, nStackNum, eCompareFlag, nLevel, eLevelCompareFlag);	-- 需求目标属于自己的Buff

	-----------------技能施放技能需求-------------------------------------------
	--skill.AddCheckSelfLearntSkill(dwSkillID, dwSkillLevel, LevelCompareFlag);     --检查比较Caster自己已学习的技能ID和等级
	----------------- BUFF相关 -------------------------------------------------
	--skill.BindBuff(1, nBuffID, nBuffLevel);		-- 设置1号位Buff
	--skill.BindBuff(2, nBuffID, nBuffLevel);		-- 设置2号位Buff
	--skill.BindBuff(3, nBuffID, nBuffLevel);		-- 设置3号位Buff
	--skill.BindBuff(4, nBuffID, nBuffLevel);		-- 设置4号位Buff

	----------------- 设置Cool down --------------------------------------------
	skill.SetNormalCoolDown(1, 76);
	-- 公共CD
	--skill.SetPublicCoolDown(16);							-- 公共CD 1.5秒
	-- 技能CD, CoolDownIndex为CD位(共3个), nCoolDownID为CoolDownList.tab内的CDID
	--skill.SetNormalCoolDown(CoolDownIndex, nCoolDownID);	--技能普通CD
	--skill.SetCheckCoolDown(CoolDownIndex, nCoolDownID);	--只检查不走的CD
	----------------- 经验升级相关 ---------------------------------------------
	--注意,虽然这些内容可以在脚本内更改,但一般不做任何改动!
	--skill.dwLevelUpExp	= 0;    				-- 升级经验
	--skill.nExpAddOdds		= 1024;					-- 技能熟练度增长概率
	--skill.nPlayerLevelLimit	= 0;				-- 角色可以学会该技能所必须达到的最低等级

	----------------- 技能仇恨 -------------------------------------------------
	--skill.nBaseThreat		= 0;

	----------------- 技能消耗 -------------------------------------------------
	--skill.nCostLife		= 0;									-- 技能消耗生命值
	--skill.nCostMana      	= tSkillData[dwSkillLevel].nCostMana;	-- 技能消耗的内力
	--skill.nCostStamina	= 0;									-- 技能消耗的体力
	--skill.nCostItemType	= 0;									-- 技能消耗的物品类型
	--skill.nCostItemIndex	= 0;									-- 技能消耗的物品索引ID

	----------------- 聚气相关 -------------------------------------------------
	--skill.bIsAccumulate	= false;				-- 技能是否需要聚气
	--skill.SetSubsectionSkill(nBeginInterval, nEndInterval, dwSkillID, dwSkillLevel)

	----------------- 链状技能相关 ---------------------------------------------
	--skill.nChainBranch	= 1;					--链状技能分支数
	--skill.nChainDepth		= 3;					--链状技能层数
	--链状技能的子技能用skill.SetSubsectionSkill()设定

	----------------- 施放距离 -------------------------------------------------
	--skill.nMinRadius		= 0 * LENGTH_BASE;		-- 技能施放的最小距离
	--skill.nMaxRadius		= 0 * LENGTH_BASE;		-- 技能施放的最大距离

	----------------- 作用范围 -------------------------------------------------
	--skill.nProtectRadius = 0 * LENGTH_BASE;                     -- 环形和矩形AOE的保护距离，范围内不受伤害
	--skill.nHeight = 0 * LENGTH_BASE;                            -- AOE的高度，全高，圆柱体AOE中不填为2倍的nAreaRadius，矩形AOE中不填为nAreaRadius
	--skill.nRectWidth = 0 * LENGTH_BASE;                         -- 矩形AOE的宽度，全宽，不填为nAreaRadius
	--skill.nAngleRange		= 256;					-- 攻击范围的扇形角度范围
	--skill.nAreaRadius		= 0 * LENGTH_BASE;		-- 技能作用半径
	--skill.nTargetCountLimit	= 2;				-- 技能作用目标数量限制,(小于0 代表目标数量不限制)

	----------------- 时间相关 -------------------------------------------------
	--skill.nPrepareFrames  	= 0;				-- 吟唱帧数
	--skill.nChannelInterval	= 0; 				-- 通道技间隔时间
	--skill.nChannelFrame		= 0;	 			-- 通道技持续时间，单位帧数
	--skill.nBulletVelocity		= 0;				-- 子弹速度，单位 点/帧

	----------------- 阵法相关 -------------------------------------------------
	--skill.bIsFormationSkill	= false;			-- 是否阵眼技能
	--skill.nFormationRange		= 0 * LENGTH_BASE;	-- 结阵的范围
	--skill.nLeastFormationPopulation	= 2;		-- 结阵的范围的最少队员数（包括队长）

	----------------- 目标血量需求 ---------------------------------------------
	--skill.nTargetLifePercentMin	= 0;			-- 血量最小值>=
	--skill.nTargetLifePercentMax	= 100;			-- 血量最大值<=

	----------------- 自身血量需求 ---------------------------------------------
	--skill.nSelfLifePercentMin	= 0;				-- 血量最小值>=
	--skill.nSelfLifePercentMax	= 100;				-- 血量最大值<=

	----------------- 打退打断落马相关 -------------------------------------------------
	--skill.nBeatBackRate       = 1 * PERCENT_BASE;		-- 技能被打退的概率,默认1024
	--skill.nBrokenRate         = 1 * PERCENT_BASE;		-- 技能被打断的概率,默认1024
	--skill.nBreakRate			= 0 * PERCENT_BASE;		-- 打断目标施法的概率,基数1024

	--skill.nDismountingRate	= 0;					-- 将目标击落下马几率,基数1024，默认0

	----------------- 武器伤害相关 ---------------------------------------------
	--skill.nWeaponDamagePercent		= 0;			-- 武器伤害百分比,对外功伤害有用。填0表示此次外功攻击不计算武器伤害,1024为100%

	return true;
end

-- 对技能执行的特殊条件检查，该函数可以在开始施放技能的时候被调用，以确定是否可以施放该机能
-- Player: 技能施放者, nPreResult: 程序里面按照一般流程判断的结果
-- 注意，最终以脚本返回的结果为准
function CanCast(player, nPreResult)    --判断玩家的状态，以判断是否可以发出技能
	return nPreResult;
end

-- 技能升级时调用此函数，参数skill为升级后的skill，第一次获得某个技能时也调用此脚本
function OnSkillLevelUp(skill, player)

end

--魔法属性应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function Apply(dwCharacterID)
end

--魔法属性反应用时的执行函数,dwCharacterID是魔法属性作用的目标ID
function UnApply(dwCharacterID)
end

 -- by 每天涨停@梦江南 $ Jx3UnPack-PAKV3 jx3.mail@gmail.com